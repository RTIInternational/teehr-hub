name: Build and Push Docker Image

on:
  workflow_call:
    inputs:
      image-tag:
        description: "The image tag to use for the Docker image"
        required: true
        type: string
env:
  # Use docker.io for Docker Hub if empty
  GH_REGISTRY: ghcr.io
  AWS_REGISTRY: 935462133478.dkr.ecr.us-east-2.amazonaws.com
  IMAGE_NAME: "teehr"      

jobs:
  reusable_workflow_job:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          repository: RTIInternational/teehr-hub
          ref: update-deployment
          token: ${{ secrets.GITHUB_TOKEN }}


      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v1

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v2
        with:
          registry: ${{ env.GH_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ inputs.image-tag }}
          # labels: ${{ steps.meta.outputs.labels }}
          # cache-from: type=gha
          # cache-to: type=gha,mode=max
          build-args: IMAGE_TAG=${{ inputs.image-tag }}

      # ==============================
      # Now try to build and push to AWS ERC
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWI_RTI_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWI_RTI_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta-aws
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.AWS_REGISTRY }}/${{ github.event.repository.name }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push-aws
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
        with:        
          context: .
          push: true
          tags: ${{ steps.meta-aws.outputs.tags }}
          labels: ${{ steps.meta-aws.outputs.labels }}
          build-args: IMAGE_TAG=${{ inputs.image-tag }}      

  # deploy-to-jupyterhub:
  #   if: inputs.image-tag != 'dev'
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2